#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>

#define PORT 5000
#define MAX_SEQ_NUM 8

typedef struct { int seq_num; char data[100]; } Packet;

int main() {
    int sockfd, exp_seq_num = 0;
    struct sockaddr_in servaddr, cliaddr;
    socklen_t len = sizeof(cliaddr);

    sockfd = socket(AF_INET, SOCK_DGRAM, 0);
    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = INADDR_ANY;
    servaddr.sin_port = htons(PORT);
    bind(sockfd, (struct sockaddr*)&servaddr, sizeof(servaddr));

    printf("Server listening on port %d...\n", PORT);

    Packet ack_pkt;
    int last_received_seq = -1;

    while (1) {
        Packet pkt;
        recvfrom(sockfd, &pkt, sizeof(pkt), 0, (struct sockaddr*)&cliaddr, &len);

        if (pkt.seq_num == exp_seq_num) {
            printf("Received packet %d\n", pkt.seq_num);
            last_received_seq = exp_seq_num;
            ack_pkt.seq_num = exp_seq_num;
            sendto(sockfd, &ack_pkt, sizeof(ack_pkt), 0, (struct sockaddr*)&cliaddr, len);
            exp_seq_num = (exp_seq_num + 1) % MAX_SEQ_NUM;
        } else {
            printf("Received out-of-order packet %d, discarding.\n", pkt.seq_num);
            ack_pkt.seq_num = last_received_seq;
            sendto(sockfd, &ack_pkt, sizeof(ack_pkt), 0, (struct sockaddr*)&cliaddr, len);
        }
    }

    return 0;
}
